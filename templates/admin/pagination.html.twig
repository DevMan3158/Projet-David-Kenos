{% block pagination %}

    <!-- Génère un bloc de pagination s'il y a au moins une page -->
    {% if pages > 1 %}
        <!-- Pagination -->
        {# On adapte notre route 'path' en fonction de la page sur la quelle on est #}
        {% if ('admin' in app.request.get('_route')) %}
            {% if ('user' in app.request.get('_route')) %}
                {% set routePath = "app_user_index" %}
            {% elseif ('chocolaterie' in app.request.get('_route')) %}
                {% set routePath = "app_chocolaterie_index" %}
            {% endif %}
        {% else %}
            {% if ('actualite' in app.request.get('_route')) %}
                {% set routePath = "app_actualite" %}
            {% endif %}
        {% endif %}
        {# Le nombre de page à afficher autours de la page actuelle est 2 ou une valeur minimale calculée #}
        {% set defaultPageQuantityAround = 2 %}
        {# Valeur minimum #}
        {% set minimumPageQuantityAround = min(currentPage - 1, pages - currentPage) %}
        {# Condition pour afficher les bons numéros de page avant la page actuelle : valeur par défaut ou minimale #}
        {% set conditionBefore = currentPage != 1 and minimumPageQuantityAround <= currentPage - 1 %}
        {# Condition pour afficher les bons numéros de page après la page actuelle : valeur par défaut ou minimale #}
        {% set conditionAfter = currentPage != pages and minimumPageQuantityAround <= pages - currentPage %}
        {# Définir les numéros de page avant, les autres pages seront remplacées par "..." #}
        {% set PageQuantityAroundBefore = conditionBefore ? defaultPageQuantityAround : minimumPageQuantityAround %}
        {# Définir les numéros de page après, les autres pages seront remplacées par "..." #}
        {% set PageQuantityAroundAfter = conditionAfter ? defaultPageQuantityAround : minimumPageQuantityAround %}
        <div class="uk-flex uk-flex-center">
            <ul class="uk-pagination uk-text-bold uk-text-uppercase">
                {# Lien précédent #}
                {% if currentPage - 1 != 0 %}
                <li><a class="st-color-yellow" href="{{ path(routePath, { 'pg': currentPage - 1 }) }}" title="Previous"><span class="uk-margin-small-right" uk-pagination-previous></span> Précédent</a></li>
                {% endif %}
                {% for i in 1.. pages %}
                {# La page actuelle à montrer #}
                {% if currentPage == i %}
                <li class="st-color-red">{{ i }}</li>
                {# Afficher "..." avant la page actuelle en fonction des numéros de page à afficher avant #}
                {% elseif (i < currentPage and 1 != i) and (i == currentPage - PageQuantityAroundBefore - 1) %}
                <li class="uk-disabled">...</li>
                {# Afficher "..." apres la page actuelle en fonction des numéros de page à afficher apres #}
                {% elseif (i > currentPage and pages != i) and (i == currentPage + PageQuantityAroundAfter + 1) %}
                <li class="uk-disabled">...</li>
                {# Cacher les pages avant la page courante et avant "..." apars la page 1 #}
                {% elseif (1 != i) and (i < currentPage - PageQuantityAroundBefore - 1) %}
                <li class="uk-hidden"><a href="{{ path(routePath, { 'pg': i }) }}" title="Page {{ i }}">{{ i }}</a></li>
                {# Masquer les pages sur la page actuelle et après "..." sauf la page avec le numéro "pages" (dernier) #}
                {% elseif (pages != i) and (i > currentPage + PageQuantityAroundAfter + 1) %}
                <li class="uk-hidden"><a href="{{ path(routePath, { 'pg': i }) }}" title="Page {{ i }}">{{ i }}</a></li>
                {# Appliquer un style particulier pour le lien le plus bas correspondant à la première page 1 et le lien le plus haut correspondant au nombre total de pages #}
                {% elseif i == 1 or i == pages %}
                <li><a class="st-color-blue" href="{{ path(routePath, { 'pg': i }) }}" title="Page {{ i }}">{{ i }}</a></li>
                {# Liens normaux non concernés par les conditions ci-dessus #}
                {% else %}
                <li><a href="{{ path(routePath, { 'pg': i }) }}" title="Page {{ i }}">{{ i }}</a></li>
                {% endif %}
                {% endfor %}
                {# Lien suivant #}
                {% if currentPage + 1 <= pages %}
                <li class="uk-margin-auto-left"><a class="st-color-yellow" href="{{ path(routePath, { 'pg': currentPage + 1 }) }}" title="Next">Suivant <span class="uk-margin-small-left" uk-pagination-next></span></a></li>
                {% endif %}
            </ul>
        </div>
    {% endif %}

{% endblock %}